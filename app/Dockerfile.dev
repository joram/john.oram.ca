# Use a smaller base image for development
FROM node:20-alpine

# Install system dependencies
RUN apk add --no-cache libc6-compat

# Create app directory and set permissions
RUN mkdir -p /app && chown -R node:node /app

# Set working directory
WORKDIR /app

# Switch to non-root user
USER node

# Copy package files first for better caching
COPY --chown=node:node package*.json ./

# Create cache directories with proper permissions
RUN mkdir -p /app/node_modules/.cache && \
    chown -R node:node /app/node_modules

# Install dependencies with memory optimization
RUN npm ci --only=production --no-optional && \
    npm cache clean --force

# Install development dependencies separately
RUN npm ci --only=dev --no-optional && \
    npm cache clean --force

# Copy the rest of the application
COPY --chown=node:node . .

# Set environment variables for memory optimization
ENV NODE_ENV=development
ENV NODE_OPTIONS="--max-old-space-size=512"
ENV CI=true
ENV DISABLE_ESLINT_PLUGIN=true
ENV GENERATE_SOURCEMAP=false
ENV HOST=0.0.0.0

# Expose port 3000 for the development server
EXPOSE 3000

# Start the development server with memory optimization
CMD ["npm", "start", "--"]
